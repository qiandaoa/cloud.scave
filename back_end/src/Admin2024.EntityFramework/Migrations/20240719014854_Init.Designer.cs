// <auto-generated />
using System;
using Admin2024.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Admin2024.EntityFramework.Migrations
{
    [DbContext(typeof(AdminDbContext))]
    [Migration("20240719014854_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Admin2024.Domain.System.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 323, DateTimeKind.Utc).AddTicks(3255))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("OperationName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("operation_id");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 323, DateTimeKind.Utc).AddTicks(3578))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.HasKey("Id");

                    b.ToTable("Operation");
                });

            modelBuilder.Entity("Admin2024.Domain.System.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 323, DateTimeKind.Utc).AddTicks(7155))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid>("OperationId")
                        .HasColumnType("uuid")
                        .HasColumnName("operation_id");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("permission_name");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("resource_id");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 323, DateTimeKind.Utc).AddTicks(7372))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Admin2024.Domain.System.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 323, DateTimeKind.Utc).AddTicks(9804))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("resource_id");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 324, DateTimeKind.Utc).AddTicks(30))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.HasKey("Id");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("Admin2024.Domain.System.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 324, DateTimeKind.Utc).AddTicks(2256))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role_name");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 324, DateTimeKind.Utc).AddTicks(2471))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c888aa9e-3dab-4adb-a000-87ad0d1f5fe5"),
                            CreateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1780),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleName = "超级管理员",
                            UpdateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1780),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("56024aa3-b610-4e23-b688-6ac5b4105599"),
                            CreateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1782),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleName = "管理员",
                            UpdateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1783),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2b7f40f9-bc49-4911-a5b8-b0ba64331b99"),
                            CreateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1784),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleName = "普通用户",
                            UpdateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1785),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Admin2024.Domain.System.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 324, DateTimeKind.Utc).AddTicks(4815))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uuid")
                        .HasColumnName("permission_id");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 324, DateTimeKind.Utc).AddTicks(5042))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.HasKey("Id");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("Admin2024.Domain.System.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 324, DateTimeKind.Utc).AddTicks(7432))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("NickName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<string>("Salt")
                        .HasColumnType("text")
                        .HasColumnName("salt");

                    b.Property<string>("Telephone")
                        .HasColumnType("text")
                        .HasColumnName("telephone");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 324, DateTimeKind.Utc).AddTicks(7656))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("829a059c-30b8-45b8-86b2-b03a818d5be0"),
                            CreateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1533),
                            CreateBy = new Guid("829a059c-30b8-45b8-86b2-b03a818d5be0"),
                            Email = "abc@123456.com",
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "超级管理员",
                            Password = "tU7k6aTunMYVZ1T9TBF804zcxh78D8aE1becPe+fMWU=",
                            Remark = "aaa",
                            Salt = "wSOw74FVLb56vDnDPFiVkA==",
                            Telephone = "12345678910",
                            UpdateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1535),
                            UpdateBy = new Guid("829a059c-30b8-45b8-86b2-b03a818d5be0"),
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("99dfec05-a872-4cab-8aaf-7d86b3b4a5bd"),
                            CreateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1559),
                            CreateBy = new Guid("99dfec05-a872-4cab-8aaf-7d86b3b4a5bd"),
                            Email = "abc@123456.com",
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "管理员",
                            Password = "qx9nPbht8LnkvbakhC8slWxMsi4CLHT6saGOYs647wU=",
                            Remark = "aaa",
                            Salt = "aaaasssddd",
                            Telephone = "12345678910",
                            UpdateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1560),
                            UpdateBy = new Guid("99dfec05-a872-4cab-8aaf-7d86b3b4a5bd"),
                            Username = "svip"
                        },
                        new
                        {
                            Id = new Guid("6aff6c46-8b8c-4ad8-a819-f35b0058547c"),
                            CreateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1575),
                            CreateBy = new Guid("6aff6c46-8b8c-4ad8-a819-f35b0058547c"),
                            Email = "abc@123456.com",
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "普通用户",
                            Password = "EEaztsfvDUmd0I2BPdLkC/R1vN4s/5s9drc+V5lBUkY=",
                            Remark = "aaa",
                            Salt = "aaaasssddd",
                            Telephone = "12345678910",
                            UpdateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1576),
                            UpdateBy = new Guid("6aff6c46-8b8c-4ad8-a819-f35b0058547c"),
                            Username = "001"
                        });
                });

            modelBuilder.Entity("Admin2024.Domain.System.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(251))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(439))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fffeffc-8aa2-40b3-a03e-3e802c261c0e"),
                            CreateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1821),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleId = new Guid("c888aa9e-3dab-4adb-a000-87ad0d1f5fe5"),
                            UpdateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1822),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("829a059c-30b8-45b8-86b2-b03a818d5be0")
                        },
                        new
                        {
                            Id = new Guid("1096d0d7-760b-4bd7-b503-c23f2a4d17b4"),
                            CreateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1824),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleId = new Guid("56024aa3-b610-4e23-b688-6ac5b4105599"),
                            UpdateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1824),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("99dfec05-a872-4cab-8aaf-7d86b3b4a5bd")
                        },
                        new
                        {
                            Id = new Guid("99cb6883-9eef-4bfa-bb80-087c01574148"),
                            CreateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1826),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleId = new Guid("2b7f40f9-bc49-4911-a5b8-b0ba64331b99"),
                            UpdateAt = new DateTime(2024, 7, 19, 1, 48, 54, 325, DateTimeKind.Utc).AddTicks(1826),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("6aff6c46-8b8c-4ad8-a819-f35b0058547c")
                        });
                });

            modelBuilder.Entity("Admin2024.Domain.System.Permission", b =>
                {
                    b.HasOne("Admin2024.Domain.System.Role", null)
                        .WithMany("_rolePermission")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("Admin2024.Domain.System.Role", b =>
                {
                    b.Navigation("_rolePermission");
                });
#pragma warning restore 612, 618
        }
    }
}
