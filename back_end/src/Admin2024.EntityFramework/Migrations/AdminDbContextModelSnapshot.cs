// <auto-generated />
using System;
using Admin2024.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Admin2024.EntityFramework.Migrations
{
    [DbContext(typeof(AdminDbContext))]
    partial class AdminDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Admin2024.Domain.System.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 558, DateTimeKind.Utc).AddTicks(227))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("OperationName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("operation_id");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 558, DateTimeKind.Utc).AddTicks(477))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.HasKey("Id");

                    b.ToTable("Operation");
                });

            modelBuilder.Entity("Admin2024.Domain.System.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 558, DateTimeKind.Utc).AddTicks(4984))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid>("OperationId")
                        .HasColumnType("uuid")
                        .HasColumnName("operation_id");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("permission_name");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid")
                        .HasColumnName("resource_id");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 558, DateTimeKind.Utc).AddTicks(5236))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Admin2024.Domain.System.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 558, DateTimeKind.Utc).AddTicks(8191))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("resource_id");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 558, DateTimeKind.Utc).AddTicks(8420))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.HasKey("Id");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("Admin2024.Domain.System.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 559, DateTimeKind.Utc).AddTicks(1950))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role_name");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 559, DateTimeKind.Utc).AddTicks(2172))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ac61574-a1f0-456a-998a-58cba20cdd29"),
                            CreateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9148),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleName = "超级管理员",
                            UpdateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9149),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c64dfe3d-fa13-43bd-88b4-38f6265472e7"),
                            CreateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9151),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleName = "管理员",
                            UpdateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9152),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1468a032-9e02-40c2-89f6-e7712119d6c1"),
                            CreateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9154),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleName = "普通用户",
                            UpdateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9155),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Admin2024.Domain.System.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 559, DateTimeKind.Utc).AddTicks(6073))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uuid")
                        .HasColumnName("permission_id");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 559, DateTimeKind.Utc).AddTicks(6424))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.HasKey("Id");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("Admin2024.Domain.System.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(526))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("NickName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<string>("Salt")
                        .HasColumnType("text")
                        .HasColumnName("salt");

                    b.Property<string>("Telephone")
                        .HasColumnType("text")
                        .HasColumnName("telephone");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(1110))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20d649e7-8a24-471b-945e-b85c3bdae742"),
                            CreateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(8868),
                            CreateBy = new Guid("20d649e7-8a24-471b-945e-b85c3bdae742"),
                            Email = "abc@123456.com",
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "超级管理员",
                            Password = "cJUbU/fQ2joYMFq2hGnAAgh2I+cjUFPNZsrwK0rHk5g=",
                            Remark = "aaa",
                            Salt = "WY+nRi8fUXldxVQ3nVqlqw==",
                            Telephone = "12345678910",
                            UpdateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(8870),
                            UpdateBy = new Guid("20d649e7-8a24-471b-945e-b85c3bdae742"),
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("30983749-9c77-4e3a-921a-7371a06a0a8e"),
                            CreateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(8876),
                            CreateBy = new Guid("30983749-9c77-4e3a-921a-7371a06a0a8e"),
                            Email = "abc@123456.com",
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "管理员",
                            Password = "abc123456",
                            Remark = "aaa",
                            Salt = "aaaasssddd",
                            Telephone = "12345678910",
                            UpdateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(8876),
                            UpdateBy = new Guid("30983749-9c77-4e3a-921a-7371a06a0a8e"),
                            Username = "svip001"
                        },
                        new
                        {
                            Id = new Guid("77cb7fa5-2c8b-4ae6-a5e5-c30416522bd6"),
                            CreateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(8879),
                            CreateBy = new Guid("77cb7fa5-2c8b-4ae6-a5e5-c30416522bd6"),
                            Email = "abc@123456.com",
                            IsActived = true,
                            IsDeleted = false,
                            NickName = "普通用户",
                            Password = "abc123456",
                            Remark = "aaa",
                            Salt = "aaaasssddd",
                            Telephone = "12345678910",
                            UpdateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(8880),
                            UpdateBy = new Guid("77cb7fa5-2c8b-4ae6-a5e5-c30416522bd6"),
                            Username = "svip001"
                        });
                });

            modelBuilder.Entity("Admin2024.Domain.System.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(5902))
                        .HasColumnName("create_at");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("create_by");

                    b.Property<bool>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("is_actived");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Remark")
                        .HasColumnType("text")
                        .HasColumnName("remarks");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(6380))
                        .HasColumnName("update_at");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uuid")
                        .HasColumnName("update_by");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eef4f5b4-f130-4b08-a92b-d72e6ed72427"),
                            CreateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9211),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleId = new Guid("0ac61574-a1f0-456a-998a-58cba20cdd29"),
                            UpdateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9212),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("20d649e7-8a24-471b-945e-b85c3bdae742")
                        },
                        new
                        {
                            Id = new Guid("9fc6d354-5451-4733-90a0-9fce288c823d"),
                            CreateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9215),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleId = new Guid("c64dfe3d-fa13-43bd-88b4-38f6265472e7"),
                            UpdateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9216),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("30983749-9c77-4e3a-921a-7371a06a0a8e")
                        },
                        new
                        {
                            Id = new Guid("5ec412d1-df0f-4097-8dbf-d7a5a21d94ae"),
                            CreateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9219),
                            CreateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsActived = true,
                            IsDeleted = false,
                            Remark = "",
                            RoleId = new Guid("1468a032-9e02-40c2-89f6-e7712119d6c1"),
                            UpdateAt = new DateTime(2024, 7, 18, 16, 40, 46, 560, DateTimeKind.Utc).AddTicks(9220),
                            UpdateBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("77cb7fa5-2c8b-4ae6-a5e5-c30416522bd6")
                        });
                });

            modelBuilder.Entity("Admin2024.Domain.System.Permission", b =>
                {
                    b.HasOne("Admin2024.Domain.System.Role", null)
                        .WithMany("_rolePermission")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("Admin2024.Domain.System.Role", b =>
                {
                    b.Navigation("_rolePermission");
                });
#pragma warning restore 612, 618
        }
    }
}
